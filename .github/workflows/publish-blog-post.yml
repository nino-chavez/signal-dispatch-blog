name: Publish Blog Post

on:
  issues:
    types: [opened, labeled]
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to process'
        required: true
        type: number

jobs:
  publish:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install tsx @anthropic-ai/sdk

      - name: Get issue data
        id: issue
        uses: actions/github-script@v7
        with:
          script: |
            const issueNumber = context.payload.inputs?.issue_number || context.issue.number;
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber
            });
            
            // Check if issue has blog-automation label
            const hasLabel = issue.data.labels.some(label =>
              label.name === 'blog-automation'
            );
            
            if (!hasLabel) {
              core.setFailed('Issue does not have blog-automation label');
              return;
            }
            
            core.setOutput('body', issue.data.body);
            core.setOutput('title', issue.data.title);
            core.setOutput('number', issueNumber);
            core.setOutput('user_login', issue.data.user.login);
            core.setOutput('user_id', issue.data.user.id);

      - name: Parse issue and generate blog post
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          ISSUE_BODY: ${{ steps.issue.outputs.body }}
          ISSUE_TITLE: ${{ steps.issue.outputs.title }}
          ISSUE_NUMBER: ${{ steps.issue.outputs.number }}
        run: |
          node .github/scripts/generate-blog-post.js

      - name: Commit and push
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add src/content/blog/*.mdx
          git commit -m "Add new blog post from issue #${{ steps.issue.outputs.number }}

          🤖 Generated via GitHub Actions automation

          Co-Authored-By: ${{ steps.issue.outputs.user_login }} <${{ steps.issue.outputs.user_id }}+${{ steps.issue.outputs.user_login }}@users.noreply.github.com>"
          git push

      - name: Publish to Substack
        env:
          MAILGUN_API_KEY: ${{ secrets.MAILGUN_API_KEY }}
          MAILGUN_DOMAIN: ${{ secrets.MAILGUN_DOMAIN }}
          SUBSTACK_EMAIL: publish@signal-dispatch.substack.com
          ISSUE_TITLE: ${{ steps.issue.outputs.title }}
        run: |
          # Get the content file
          CONTENT_FILE=$(ls src/content/blog/*.txt | head -1)
          if [ -f "$CONTENT_FILE" ]; then
            echo "📧 Sending to Substack..."
            curl -s --user "api:$MAILGUN_API_KEY" \
              https://api.mailgun.net/v3/$MAILGUN_DOMAIN/messages \
              -F from="Blog Automation <noreply@$MAILGUN_DOMAIN>" \
              -F to="$SUBSTACK_EMAIL" \
              -F subject="$ISSUE_TITLE" \
              -F text=<"$CONTENT_FILE"
            echo "✅ Email sent to Substack"
            # Clean up
            rm "$CONTENT_FILE"
          else
            echo "⚠️ No content file found, skipping Substack publish"
          fi

      - name: Comment on issue
        uses: actions/github-script@v7
        with:
          script: |
            const issueNumber = context.payload.inputs?.issue_number || context.issue.number;
            github.rest.issues.createComment({
              issue_number: issueNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ Blog post published successfully to both your blog and Substack! Vercel is building now.\n\nCheck deployment status: https://vercel.com/dashboard'
            })

      - name: Close issue
        uses: actions/github-script@v7
        with:
          script: |
            const issueNumber = context.payload.inputs?.issue_number || context.issue.number;
            github.rest.issues.update({
              issue_number: issueNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed',
              labels: ['published']
            })
